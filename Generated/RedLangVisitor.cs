//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from RedLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RedLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IRedLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] RedLangParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] RedLangParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] RedLangParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] RedLangParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.callExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExpr([NotNull] RedLangParser.CallExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAccess([NotNull] RedLangParser.ArrayAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] RedLangParser.PrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary([NotNull] RedLangParser.UnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] RedLangParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] RedLangParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] RedLangParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.equality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality([NotNull] RedLangParser.EqualityContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.logicAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicAnd([NotNull] RedLangParser.LogicAndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.logicOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicOr([NotNull] RedLangParser.LogicOrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] RedLangParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.readStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadStmt([NotNull] RedLangParser.ReadStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStmt([NotNull] RedLangParser.PrintStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] RedLangParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStmt([NotNull] RedLangParser.ForStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] RedLangParser.WhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] RedLangParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] RedLangParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] RedLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] RedLangParser.ReturnStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam([NotNull] RedLangParser.ParamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] RedLangParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecl([NotNull] RedLangParser.FunctionDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] RedLangParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.arrayAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAssignment([NotNull] RedLangParser.ArrayAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.readFileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadFileStmt([NotNull] RedLangParser.ReadFileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RedLangParser.writeFileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWriteFileStmt([NotNull] RedLangParser.WriteFileStmtContext context);
}
